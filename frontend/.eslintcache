[{"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\index.js":"1","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\App.js":"2","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\History.js":"3","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\serviceWorker.js":"4","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\store\\index.js":"5","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\routes.js":"6","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\index.jsx":"7","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\BaseMap.jsx":"8","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\index.jsx":"9","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\index.jsx":"10","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Buildings\\index.jsx":"11","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Subway\\index.jsx":"12","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Boroughs\\index.jsx":"13","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Widgets\\index.jsx":"14","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\TopTenCrimes\\index.jsx":"15","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Crimes\\index.jsx":"16","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\BoroughsButtons.jsx":"17","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\BuildingsModeButton.jsx":"18","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\index.jsx":"19","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Filters\\index.jsx":"20","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Filters\\Categories.jsx":"21","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Filters\\Severity.jsx":"22","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Day\\index.jsx":"23","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Time\\index.jsx":"24","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\index.jsx":"25","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\colorManipulator.js":"26","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\focusVisible.js":"27","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\ownerWindow.js":"28","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\reactHelpers.js":"29","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\ValueLabel.js":"30","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\useEventCallback.js":"31","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\ownerDocument.js":"32","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\constants\\index.jsx":"33","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\constants\\CrimeCategoryCodes.jsx":"34","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\constants\\timeMarks.jsx":"35","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\store\\view.js":"36","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\FilterDrawer.jsx":"37","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\PredictDrawer.jsx":"38","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\index.jsx":"39","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Month\\index.jsx":"40","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Sex.jsx":"41","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Race.jsx":"42","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Location.jsx":"43","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Year.jsx":"44"},{"size":504,"mtime":1611396849688,"results":"45","hashOfConfig":"46"},{"size":990,"mtime":1609693350805,"results":"47","hashOfConfig":"46"},{"size":206,"mtime":1609693386305,"results":"48","hashOfConfig":"46"},{"size":5799,"mtime":1608567089662,"results":"49","hashOfConfig":"46"},{"size":506,"mtime":1609753459320,"results":"50","hashOfConfig":"46"},{"size":824,"mtime":1611396847328,"results":"51","hashOfConfig":"46"},{"size":46,"mtime":1611396878890,"results":"52","hashOfConfig":"46"},{"size":2070,"mtime":1611392732455,"results":"53","hashOfConfig":"46"},{"size":252,"mtime":1611381734073,"results":"54","hashOfConfig":"46"},{"size":328,"mtime":1609691904369,"results":"55","hashOfConfig":"46"},{"size":1323,"mtime":1611381759999,"results":"56","hashOfConfig":"46"},{"size":649,"mtime":1611381764975,"results":"57","hashOfConfig":"46"},{"size":1882,"mtime":1611398285405,"results":"58","hashOfConfig":"46"},{"size":6409,"mtime":1611484081049,"results":"59","hashOfConfig":"46"},{"size":3344,"mtime":1611397812654,"results":"60","hashOfConfig":"46"},{"size":9044,"mtime":1611484065758,"results":"61","hashOfConfig":"46"},{"size":3432,"mtime":1611398233068,"results":"62","hashOfConfig":"46"},{"size":951,"mtime":1611376923111,"results":"63","hashOfConfig":"46"},{"size":188,"mtime":1610367889378,"results":"64","hashOfConfig":"46"},{"size":114,"mtime":1609704523632,"results":"65","hashOfConfig":"46"},{"size":4069,"mtime":1609692160657,"results":"66","hashOfConfig":"46"},{"size":2631,"mtime":1609692180210,"results":"67","hashOfConfig":"46"},{"size":1865,"mtime":1611436350535,"results":"68","hashOfConfig":"46"},{"size":2756,"mtime":1611437880445,"results":"69","hashOfConfig":"46"},{"size":25050,"mtime":1611383587664,"results":"70","hashOfConfig":"46"},{"size":8007,"mtime":1609683627405,"results":"71","hashOfConfig":"46"},{"size":4357,"mtime":1609683627992,"results":"72","hashOfConfig":"46"},{"size":202,"mtime":1609683628477,"results":"73","hashOfConfig":"46"},{"size":864,"mtime":1609683628795,"results":"74","hashOfConfig":"46"},{"size":1930,"mtime":1609683627249,"results":"75","hashOfConfig":"46"},{"size":452,"mtime":1609683628797,"results":"76","hashOfConfig":"46"},{"size":118,"mtime":1609683628060,"results":"77","hashOfConfig":"46"},{"size":220,"mtime":1611481686695,"results":"78","hashOfConfig":"46"},{"size":1437,"mtime":1611405284123,"results":"79","hashOfConfig":"46"},{"size":2454,"mtime":1611495138274,"results":"80","hashOfConfig":"46"},{"size":8185,"mtime":1611483172808,"results":"81","hashOfConfig":"46"},{"size":3393,"mtime":1611435481254,"results":"82","hashOfConfig":"46"},{"size":5994,"mtime":1611495539940,"results":"83","hashOfConfig":"46"},{"size":200,"mtime":1611482030789,"results":"84","hashOfConfig":"46"},{"size":1826,"mtime":1611383958316,"results":"85","hashOfConfig":"46"},{"size":1868,"mtime":1611382263078,"results":"86","hashOfConfig":"46"},{"size":2925,"mtime":1611482909525,"results":"87","hashOfConfig":"46"},{"size":2635,"mtime":1611496262210,"results":"88","hashOfConfig":"46"},{"size":1728,"mtime":1611484533307,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1usqmf1",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\index.js",[],["192","193"],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\App.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\History.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\serviceWorker.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\store\\index.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\routes.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\BaseMap.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Buildings\\index.jsx",["194","195"],"import { useState, useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\n\r\nconst BuildingsLayer = props => {\r\n  const [layer, setLayer] = useState(null)\r\n  const renderer = {\r\n    type: 'simple', // autocasts as new SimpleRenderer()\r\n    // Add a default MeshSymbol3D. The color will be determined\r\n    // by the visual variables\r\n    symbol: {\r\n      type: 'mesh-3d',\r\n      symbolLayers: [\r\n        {\r\n          type: 'fill',\r\n          material: {\r\n            color: 'rgba(101, 212, 243, 0.5)',\r\n            colorMixMode: 'replace'\r\n          },\r\n          edges: {\r\n            type: 'solid',\r\n            color: [0, 0, 0, 0.6],\r\n            size: 1.5\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadModules(['esri/layers/SceneLayer'])\r\n      .then(([SceneLayer]) => {\r\n        var initLayer = new SceneLayer({\r\n          url:\r\n            'https://tiles.arcgis.com/tiles/0p6i4J6xhQas4Unf/arcgis/rest/services/New_York_City_3D_Buildings_Optimized/SceneServer',\r\n          popupEnabled: false,\r\n          renderer,\r\n          title: '3D Building Models',\r\n          legendEnabled: false\r\n        })\r\n        setLayer(initLayer)\r\n        props.map.add(initLayer)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n  return null\r\n}\r\n\r\nexport default BuildingsLayer\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Subway\\index.jsx",["196","197"],"import { useState, useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\n\r\nconst SubwayLayer = props => {\r\n  const [layer, setLayer] = useState(null)\r\n\r\n  useEffect(() => {\r\n    loadModules(['esri/layers/FeatureLayer'])\r\n      .then(([FeatureLayer]) => {\r\n        let initLayer = new FeatureLayer({\r\n          url:\r\n            'http://opdgig.dos.ny.gov/arcgis/rest/services/NYOPDIG/DataStoryMaps/MapServer/34',\r\n          title: 'NYC Subway Lines'\r\n        })\r\n        setLayer(initLayer)\r\n        props.map.add(initLayer)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n  return null\r\n}\r\n\r\nexport default SubwayLayer\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Boroughs\\index.jsx",["198","199"],"import { useState, useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\n\r\nconst BoroughsLayer = props => {\r\n  useEffect(() => {\r\n    loadModules(['esri/layers/FeatureLayer'])\r\n      .then(([FeatureLayer]) => {\r\n        let boroughRenderer = {\r\n          type: 'simple',\r\n          symbol: {\r\n            type: 'simple-fill',\r\n            color: [227, 139, 79, 0.8],\r\n            outline: {\r\n              color: [255, 255, 255],\r\n              width: 1\r\n            }\r\n          },\r\n          visualVariables: [\r\n            {\r\n              type: 'color',\r\n              field: 'boro_code',\r\n              stops: [\r\n                {\r\n                  value: 1,\r\n                  color: '#9F1C1C',\r\n                  label: 'Manhattan'\r\n                },\r\n                {\r\n                  value: 2,\r\n                  color: '#9F1C9F',\r\n                  label: 'Bronx'\r\n                },\r\n                {\r\n                  value: 3,\r\n                  color: '#2887a1',\r\n                  label: 'Brooklyn'\r\n                },\r\n                {\r\n                  value: 4,\r\n                  color: '#1C9F32',\r\n                  label: 'Queens'\r\n                },\r\n                {\r\n                  value: 5,\r\n                  color: '#E2ED41',\r\n                  label: 'Staten Island'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n\r\n        let initLayer = new FeatureLayer({\r\n          url:\r\n            'https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/NYC_Neighborhood_Tabulation_Areas/FeatureServer',\r\n          renderer: boroughRenderer,\r\n          title: 'NYC Boroughs',\r\n          visible: false,\r\n          legendEnabled: false\r\n        })\r\n        props.map.add(initLayer)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n\r\n  return null\r\n}\r\n\r\nexport default BoroughsLayer\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Widgets\\index.jsx",["200","201","202"],"import { useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\nimport axios from 'axios'\r\nimport { changeBoro } from '../../../store'\r\nimport { connect } from 'react-redux'\r\nimport { changePeriod, changeLocationPredict, changeBoroPredict } from './../../../store/view';\r\n\r\nconst WidgetsLayer = props => {\r\n  useEffect(() => {\r\n    loadModules([\r\n      'esri/widgets/TimeSlider',\r\n      'esri/widgets/LayerList',\r\n      'esri/widgets/Expand',\r\n      'esri/widgets/Locate',\r\n      'esri/core/watchUtils',\r\n      'esri/widgets/Legend',\r\n      'esri/widgets/Search',\r\n      'esri/widgets/BasemapGallery',\r\n      'esri/tasks/Locator',\r\n      'esri/geometry/SpatialReference',\r\n      'esri/geometry/Point'\r\n    ])\r\n      .then(\r\n        ([TimeSlider,\r\n          LayerList,\r\n          Expand,\r\n          Locate,\r\n          watchUtils,\r\n          Legend,\r\n          Search,\r\n          BasemapGallery\r\n        ]) => {\r\n          props.view.when(function () {\r\n            var searchBtn = new Search({\r\n              view: props.view\r\n            })\r\n            searchBtn.on('select-result', async function (evt) {\r\n              const lat = parseFloat(evt.result.feature.geometry.latitude)\r\n              const lon = parseFloat(evt.result.feature.geometry.longitude)\r\n              props.changeLocationPredict(lon, lat)\r\n              axios\r\n              .get(\r\n                `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`\r\n              )\r\n                .then(res => {\r\n                  if (res.data.countryCode == \"US\") {\r\n                    props.changeBoro(res.data.localityInfo.administrative[3].name.toUpperCase())\r\n                  } else {\r\n                    props.changeBoro(\"MANHATTAN\")\r\n                  }\r\n                })\r\n            })\r\n            var searchExpand = new Expand({\r\n              view: props.view,\r\n              content: searchBtn\r\n            })\r\n            props.view.ui.add(searchExpand, 'top-left')\r\n\r\n            var layerList = new LayerList({\r\n              view: props.view\r\n            })\r\n            var expand = new Expand({\r\n              view: props.view,\r\n              content: layerList\r\n            })\r\n            props.view.ui.add(expand, 'top-left')\r\n        \r\n            var locateBtn = new Locate({\r\n              id: \"myLocation\",\r\n              view: props.view\r\n            })\r\n            locateBtn.on('locate', async function (evt) {\r\n              const lat = parseFloat(evt.position.coords.latitude)\r\n              const lon = parseFloat(evt.position.coords.longitude)\r\n              props.changeLocationPredict(lon, lat)\r\n              axios\r\n              .get(\r\n                `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`\r\n              )\r\n                .then(res => {\r\n                  if (res.data.countryCode == \"US\") {\r\n                    props.changeBoro(res.data.localityInfo.administrative[3].name.toUpperCase())\r\n                    props.changeBoroPredict(res.data.localityInfo.administrative[3].name.toUpperCase())\r\n                  } else {\r\n                    props.changeBoro(\"MANHATTAN\")\r\n                    props.changeBoroPredict(\"MANHATTAN\")\r\n                  }\r\n                })\r\n            })\r\n            props.view.ui.add(locateBtn, {\r\n              position: 'top-left'\r\n            })\r\n\r\n            let legendDiv = document.createElement('div')\r\n            legendDiv.id = 'legend'\r\n            legendDiv.setAttribute('style', 'margin-right:25%')\r\n            document.body.appendChild(legendDiv)\r\n\r\n            var legend = new Legend({\r\n              view: props.view,\r\n              container: 'legend'\r\n            })\r\n            props.view.ui.add(legend, 'bottom-left')\r\n\r\n            var basemap = new BasemapGallery({\r\n              view: props.view,\r\n            })\r\n\r\n            var baseExpand = new Expand({\r\n              view: props.view,\r\n              content: basemap\r\n            })\r\n            props.view.ui.add(baseExpand, 'top-left')\r\n\r\n            var baseTimeSlider = new TimeSlider({\r\n              view: props.view,\r\n              mode: \"time-window\",\r\n              fullTimeExtent: { // entire extent of the timeSlider\r\n                start: new Date(2019, 0, 1),\r\n                end: new Date(2019, 11, 31)\r\n              },\r\n              stops: {\r\n                interval: {\r\n                  value: 1,\r\n                  unit: \"months\"\r\n                },\r\n              }\r\n            })\r\n            props.view.ui.add(baseTimeSlider, 'bottom-left')\r\n            baseTimeSlider.watch(\"timeExtent\", function (value) {\r\n              props.changePeriod(value.start, value.end)\r\n            });\r\n\r\n            const sampleInstructions = document.createElement('div')\r\n            sampleInstructions.style.padding = '10px'\r\n            sampleInstructions.style.backgroundColor = '#242424'\r\n            sampleInstructions.style.width = '300px'\r\n            sampleInstructions.innerText = [\r\n              'Historical activity shows crimes committed in a two hour window occurring on the same weekday. Source: 2018 NYC Crime Open Data. '\r\n            ].join(' ')\r\n\r\n            const instructionsExpand = new Expand({\r\n              expandIconClass: 'esri-icon-question',\r\n              expandTooltip: 'Click here for data information.',\r\n              expanded: false,\r\n              view: props.view,\r\n              content: sampleInstructions\r\n            })\r\n            props.view.ui.add(instructionsExpand, 'top-left')\r\n\r\n            // Hide the instructions when the user starts interacting with the sample\r\n\r\n            watchUtils.whenTrueOnce(props.view, 'interacting', function () {\r\n              instructionsExpand.expanded = false\r\n            })\r\n          })\r\n        }\r\n      )\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n  return null\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeBoro: boro => dispatch(changeBoro(boro)),\r\n    changePeriod: (startDate, endDate) => dispatch(changePeriod(startDate, endDate)),\r\n    changeLocationPredict: (longitude, latitude) =>\r\n      dispatch(changeLocationPredict(longitude, latitude)),\r\n    changeBoroPredict: (boro) =>\r\n      dispatch(changeBoroPredict(boro))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(WidgetsLayer)\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\TopTenCrimes\\index.jsx",["203","204"],"import { useState, useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\n\r\nconst TopTenCrimesLayer = props => {\r\n  const [layer, setLayer] = useState(null)\r\n  useEffect(() => {\r\n    loadModules(['esri/layers/FeatureLayer', 'esri/layers/support/LabelClass'])\r\n      .then(([FeatureLayer, LabelClass]) => {\r\n        const verticalOffset = {\r\n          screenLength: 50,\r\n          maxWorldLength: 350,\r\n          minWorldLength: 35\r\n        }\r\n        const iconSymbol = {\r\n          type: 'point-3d', // autocasts as new PointSymbol3D()\r\n          symbolLayers: [\r\n            {\r\n              type: 'icon', // autocasts as new IconSymbol3DLayer()\r\n              size: 12,\r\n              material: {\r\n                color: 'orange'\r\n              },\r\n              outline: {\r\n                color: 'white',\r\n                size: 1\r\n              }\r\n            }\r\n          ],\r\n          verticalOffset: verticalOffset,\r\n\r\n          callout: {\r\n            type: 'line', // autocasts as new LineCallout3D()\r\n            color: 'white',\r\n            size: 1,\r\n            border: {\r\n              color: 'white'\r\n            }\r\n          }\r\n        }\r\n\r\n        const iconSymbolRenderer = {\r\n          type: 'simple', // autocasts as new SimpleRenderer()\r\n          symbol: iconSymbol\r\n        }\r\n\r\n        var labelClass = new LabelClass({\r\n          symbol: {\r\n            type: 'label-3d', // autocasts as new LabelSymbol3D()\r\n            symbolLayers: [\r\n              {\r\n                type: 'text', // autocasts as new TextSymbol3DLayer()\r\n                material: {\r\n                  color: 'white'\r\n                },\r\n                size: 14,\r\n                halo: {\r\n                  size: 1,\r\n                  color: [50, 50, 50]\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          labelPlacement: 'above-center',\r\n          labelExpressionInfo: {\r\n            expression: 'DefaultValue($feature.TITLE, \"no data\")'\r\n          }\r\n        })\r\n\r\n        const template = {\r\n          title: '{TITLE}',\r\n          content: [\r\n            {\r\n              type: 'text',\r\n              text:\r\n                '<p><b>Date:</b> {WHEN_:DateString(hideTime: true)}</p> <p><b>Location: </b> {WHERE_} </p><b>Description:</b> {DESCRIPTION} '\r\n            },\r\n            {\r\n              type: 'media',\r\n              mediaInfos: [\r\n                {\r\n                  type: 'image',\r\n                  value: {\r\n                    sourceURL: '{IMAGE_URL}'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n\r\n        let initLayer = new FeatureLayer({\r\n          url:\r\n            'https://services9.arcgis.com/UBBAhYgiEL7Yaa7P/arcgis/rest/services/top10_crimes/FeatureServer',\r\n          renderer: iconSymbolRenderer,\r\n          title: 'NYC Infamous Murders',\r\n          labelingInfo: [labelClass],\r\n          popupEnabled: true,\r\n          elevationInfo: {\r\n            // elevation mode that will place points on top of the buildings or other SceneLayer 3D objects\r\n            mode: 'relative-to-scene'\r\n          },\r\n          popupTemplate: template\r\n        })\r\n        setLayer(initLayer)\r\n        props.map.add(initLayer)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n\r\n  return null\r\n}\r\n\r\nexport default TopTenCrimesLayer\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Layers\\Crimes\\index.jsx",["205","206","207"],"/* eslint-disable complexity */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\nimport { connect } from 'react-redux'\r\nimport { categoryCodes } from '../../../constants'\r\n\r\nconst CrimesLayer = props => {\r\n  const [layer, setLayer] = useState(null)\r\n  const heatMapRenderer = {\r\n    type: 'heatmap',\r\n    colorStops: [\r\n      { color: 'rgba(63, 40, 102, 0)', ratio: 0 },\r\n      { color: 'rgb(118, 57, 255)', ratio: 0.2 },\r\n      { color: 'rgb(255, 0, 0)', ratio: 0.4 },\r\n      { color: 'rgb(248, 255, 0)', ratio: 0.9 }\r\n    ],\r\n    maxPixelIntensity: 100,\r\n    minPixelIntensity: 0\r\n  }\r\n\r\n  function dateToYMD(date) {\r\n      if(typeof(date) === 'string') {\r\n        date = new Date(date)\r\n      }\r\n      var m = date.getMonth() + 1; //Month from 0 to 11\r\n      var y = date.getFullYear();\r\n      return '' + y + '-' + (m<=9 ? '0' + m : m);\r\n  }\r\n  \r\n  useEffect(\r\n    () => {\r\n      loadModules([\r\n        'esri/layers/GeoJSONLayer',\r\n        'esri/widgets/Expand',\r\n        'esri/core/watchUtils'\r\n      ])\r\n        .then(([GeoJSONLayer]) => {\r\n          let classFilter = props.mapView.classFilter\r\n          let categoryFilter = props.mapView.categoryFilter\r\n\r\n          const template = {\r\n            title: '{OFNS_DESC}',\r\n            content:[{\r\n              type: \"fields\",\r\n              fieldInfos: [\r\n                {\r\n                  fieldName: 'expression/date',\r\n                },\r\n                {\r\n                  fieldName: 'CMPLNT_FR_TM',\r\n                  label: \"Time\",\r\n                  format: {\r\n                    dateFormat: 'short-date-short-time'\r\n                  }\r\n                },\r\n                {\r\n                  fieldName: 'PD_DESC',\r\n                  label: \"Description\"\r\n                },\r\n                {\r\n                  fieldName: 'LAW_CAT_CD',\r\n                  label: \"Severity\"\r\n                },\r\n                {\r\n                  fieldName: 'PREM_TYP_DESC',\r\n                  label: \"Location\"\r\n                },\r\n              ],\r\n            }],\r\n            expressionInfos: [{\r\n              name: \"date\",\r\n              title: \"Date\",\r\n              expression: \"$feature.year + - + $feature.month + - + $feature.day\"\r\n            }]\r\n          }\r\n\r\n          const boros = [\r\n            'MANHATTAN',\r\n            'BROOKLYN',\r\n            'QUEENS',\r\n            'STATEN ISLAND',\r\n            'BRONX'\r\n          ]\r\n\r\n          let oneHourBefore = String(props.currentHour)\r\n          let oneHourAfter = String(props.currentHour + 2)\r\n\r\n          if (Number(oneHourBefore) < 10) {\r\n            oneHourBefore = '0' + oneHourBefore\r\n          }\r\n\r\n          if (Number(oneHourAfter) < 10) {\r\n            oneHourAfter = '0' + oneHourAfter\r\n          }\r\n\r\n          var whereString = ''\r\n\r\n          if (props.currentHour === -2) {\r\n            whereString =\r\n              `${props.mapView.day !== -1 ? `dow = '${props.mapView.day}' AND` : ''} CMPLNT_FR_DT BETWEEN '${dateToYMD(props.mapView.startDate)}' AND '${dateToYMD(props.mapView.endDate)}' AND\r\n                LAW_CAT_CD IN ('${classFilter.felony ? 'FELONY' : ''}', '${classFilter.misd ? 'MISDEMEANOR' : ''\r\n                }', '${classFilter.viol ? 'VIOLATION' : ''}') AND\r\n                KY_CD IN (` + `${categoryFilter.HOMICIDE ? categoryCodes.HOMICIDE : ''\r\n                }${categoryFilter.SEXCRIME ? categoryCodes.SEXCRIME : ''}${categoryFilter.THEFTFRAUD ? categoryCodes.THEFTFRAUD : ''\r\n                }${categoryFilter.OTHERVIOLENT ? categoryCodes.OTHERVIOLENT : ''}${categoryFilter.DRUGS ? categoryCodes.DRUGS : ''\r\n                }${categoryFilter.OTHER ? categoryCodes.OTHER : ''}`.slice(0, -1) + ')'\r\n          } else {\r\n            whereString =\r\n              `CMPLNT_FR_TM BETWEEN '${oneHourBefore}:00:00' AND '${oneHourAfter}:00:00' AND\r\n                ${props.mapView.day !== -1 ? `dow = '${props.mapView.day}' AND` : ''} CMPLNT_FR_DT BETWEEN '${dateToYMD(props.mapView.startDate)}' AND '${dateToYMD(props.mapView.endDate)}' AND\r\n                LAW_CAT_CD IN ('${classFilter.felony ? 'FELONY' : ''}', '${classFilter.misd ? 'MISDEMEANOR' : ''\r\n                }', '${classFilter.viol ? 'VIOLATION' : ''}') AND\r\n                KY_CD IN (` + `${categoryFilter.HOMICIDE ? categoryCodes.HOMICIDE : ''\r\n                }${categoryFilter.SEXCRIME ? categoryCodes.SEXCRIME : ''}${categoryFilter.THEFTFRAUD ? categoryCodes.THEFTFRAUD : ''\r\n                }${categoryFilter.OTHERVIOLENT ? categoryCodes.OTHERVIOLENT : ''}${categoryFilter.DRUGS ? categoryCodes.DRUGS : ''\r\n                }${categoryFilter.OTHER ? categoryCodes.OTHER : ''}`.slice(0, -1) + ')'\r\n          }\r\n\r\n          boros.forEach(boro => {\r\n            const urlString = `https://data.cityofnewyork.us/resource/qgea-i56i.geojson?boro_nm=${boro}&$where=cmplnt_fr_dt%20between%20%272019-01-01%27%20and%20%272019-12-31%27%20&$select=CMPLNT_FR_DT,CMPLNT_FR_TM,LAW_CAT_CD,Lat_Lon,KY_CD,OFNS_DESC,PD_DESC,PREM_TYP_DESC,date_extract_m(CMPLNT_FR_DT) AS month, date_extract_d(CMPLNT_FR_DT) AS day, date_extract_y(CMPLNT_FR_DT) AS year, date_extract_dow(cmplnt_fr_dt) AS dow, BORO_NM&$limit=500000`\r\n            if (!props.map.allLayers.find(curLayer => curLayer.id === boro)) {\r\n              const initLayer = new GeoJSONLayer({\r\n                url: urlString,\r\n                renderer: heatMapRenderer,\r\n                title: 'Crime Density Heat Map',\r\n                id: boro,\r\n                legendEnabled: boro === 'MANHATTAN',\r\n                visible: boro === 'MANHATTAN',\r\n                listMode: boro === 'MANHATTAN' ? 'show' : 'hide'\r\n              })\r\n\r\n              props.map.add(initLayer)\r\n\r\n              props.view\r\n                .whenLayerView(\r\n                  props.map.allLayers.find(curLayer => curLayer.id === boro)\r\n                )\r\n                .then(function (layerView) {\r\n                  layerView.filter = {\r\n                    where: whereString\r\n                  }\r\n                })\r\n\r\n              props.view.when().then(function () {\r\n                const simpleRenderer = {\r\n                  type: 'simple',\r\n                  symbol: {\r\n                    type: 'simple-marker',\r\n                    color: '#c80000',\r\n                    size: 10\r\n                  },\r\n                  visualVariables: [\r\n                    {\r\n                      type: 'size',\r\n                      field: 'KY_CD',\r\n                      legendOptions: {\r\n                        title: 'Class of Crime'\r\n                      },\r\n                      stops: [\r\n                        { value: 101, size: 24, label: 'Felony' },\r\n                        { value: 678, size: 4, label: 'Violation' }\r\n                      ]\r\n                    },\r\n                    {\r\n                      type: 'color',\r\n                      field: 'KY_CD',\r\n                      legendOptions: {\r\n                        title: 'Type of Crime'\r\n                      },\r\n                      stops: [\r\n                        { value: 101, color: '#c80000', label: 'Homicide' },\r\n\r\n                        {\r\n                          value: 678,\r\n                          color: '#FFA07A',\r\n                          label: 'Minor Infraction'\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n\r\n                props.view.watch('scale', function (newValue) {\r\n                  initLayer.renderer = newValue <= 12000 ? simpleRenderer : heatMapRenderer\r\n                  initLayer.popupTemplate = newValue <= 12000 ? template : null\r\n                })\r\n              })\r\n            } else {\r\n              const oldLayer = props.map.allLayers.find(\r\n                curLayer =>\r\n                  curLayer.visible === true &&\r\n                  curLayer.title === 'Crime Density Heat Map'\r\n              )\r\n              oldLayer.visible = false\r\n              oldLayer.legendEnabled = false\r\n              oldLayer.listMode = 'hide'\r\n              const newLayer = props.map.allLayers.find(\r\n                curLayer => curLayer.id === props.mapView.boro\r\n              )\r\n              newLayer.visible = true\r\n              newLayer.legendEnabled = true\r\n              newLayer.listMode = 'show'\r\n              props.view\r\n                .whenLayerView(\r\n                  props.map.allLayers.find(curLayer => curLayer.id === boro)\r\n                )\r\n                .then(function (layerView) {\r\n                  layerView.filter = {\r\n                    where: whereString\r\n                  }\r\n                })\r\n            }\r\n          })\r\n        })\r\n        .catch(err => console.error(err))\r\n    },\r\n    [\r\n      props.mapView.day,\r\n      props.mapView.currentHour,\r\n      props.mapView.classFilter,\r\n      props.mapView.categoryFilter,\r\n      props.mapView.boro\r\n    ]\r\n  )\r\n\r\n  return <div />\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let mapView = state.view\r\n  return { mapView }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CrimesLayer)\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\BoroughsButtons.jsx",["208","209"],"import { useState, useEffect } from 'react'\r\nimport { loadModules } from 'esri-loader'\r\nimport { changeBoro } from '../../store'\r\nimport { connect } from 'react-redux'\r\n\r\nconst BoroughsButtons = props => {\r\n  useEffect(() => {\r\n    loadModules(['esri/layers/FeatureLayer'])\r\n      .then(([FeatureLayer]) => {\r\n        const boroughCoords = {\r\n          Brooklyn: [40.6782, -73.9442],\r\n          Manhattan: [40.7831, -73.9712],\r\n          Queens: [40.7174, -73.8743],\r\n          'Staten Island': [40.5795, -74.1502],\r\n          Bronx: [40.8448, -73.8648]\r\n        }\r\n\r\n        const paneDiv = document.createElement('div')\r\n        paneDiv.id = 'paneDiv'\r\n        paneDiv.setAttribute(\r\n          'style',\r\n          'position:absolute; display:flex; margin-left:80px; top:11px; width: 50%; text-align:center; background-color: transparent'\r\n        )\r\n        document.body.appendChild(paneDiv)\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n          let button = document.createElement('button')\r\n          button.className = 'esri-button esri-button-overwrite boroughs'\r\n          button.setAttribute(\r\n            'style',\r\n            'width:125px; display:table-cell; margin:4px; background-color: #242424; color: #69dcff; font-family: \"Avenir Next W00\",\"Helvetica Neue\",Helvetica,Arial,sans-serif; border:0; font-weight: bold'\r\n          )\r\n          paneDiv.appendChild(button)\r\n        }\r\n\r\n        const boroughButtons = document.getElementsByClassName('boroughs')\r\n\r\n        boroughButtons[0].innerText = 'Brooklyn'\r\n        boroughButtons[1].innerText = 'Manhattan'\r\n        boroughButtons[2].innerText = 'Queens'\r\n        boroughButtons[3].innerText = 'Staten Island'\r\n        boroughButtons[4].innerText = 'Bronx'\r\n\r\n        props.view.ui.add(paneDiv)\r\n\r\n        let initLayer = new FeatureLayer({\r\n          url:\r\n            'https://services9.arcgis.com/UBBAhYgiEL7Yaa7P/ArcGIS/rest/services/boroughs/FeatureServer',\r\n          visible: false,\r\n          legendEnabled: false,\r\n          listMode: 'hide'\r\n        })\r\n\r\n        props.view.when(function () {\r\n          for (let i = 0; i < boroughButtons.length; i++) {\r\n            boroughButtons[i].addEventListener('click', onClick)\r\n          }\r\n\r\n          let queryBoroughs = initLayer.createQuery()\r\n\r\n          function onClick(event) {\r\n            queryBoroughs.where = event.target.innerText\r\n\r\n            initLayer.queryExtent().then(function (results) {\r\n              results.extent.center.latitude =\r\n                boroughCoords[queryBoroughs.where][0]\r\n              results.extent.center.longitude =\r\n                boroughCoords[queryBoroughs.where][1]\r\n\r\n              props.view.goTo(\r\n                {\r\n                  target: results.extent.center,\r\n                  tilt: 70\r\n                },\r\n                {\r\n                  duration: 2000,\r\n                  easing: 'in-out-expo'\r\n                }\r\n              )\r\n            })\r\n            props.changeBoro(event.target.innerText.toUpperCase())\r\n          }\r\n        })\r\n\r\n        props.map.add(initLayer)\r\n      })\r\n      .catch(err => console.error(err))\r\n  }, [])\r\n\r\n  return null\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let mapView = state.view\r\n  return { mapView }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeBoro: boro => dispatch(changeBoro(boro))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoroughsButtons)\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\BuildingsModeButton.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Filters\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Filters\\Categories.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Filters\\Severity.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Day\\index.jsx",["210"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Slider from '../Slider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { alldays, days } from '../../../constants'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 150,\r\n    marginTop: theme.spacing(4),\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    color: 'rgba(255, 255, 255, 0.7)'\r\n  },\r\n  button: {\r\n    color: '#69dcff',\r\n    marginRight: '5%'\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  rail: {\r\n    opacity: 0.38\r\n  },\r\n  track: {\r\n    opacity: 0.38\r\n  },\r\n  markLabel: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  markLabelActive: {\r\n    color: theme.palette.text.primary\r\n  }\r\n}))\r\n\r\nfunction DaySlider(props) {\r\n  const [dow, setDow] = useState(props.value)\r\n  useEffect(\r\n    () => {\r\n      props.changeDay(dow)\r\n    },\r\n    [dow]\r\n  )\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography\r\n        id=\"discrete-slider-restrict\"\r\n        gutterBottom\r\n        className={classes.header}\r\n      >\r\n        Day of Week\r\n      </Typography>\r\n      <div style={{ height: '100%' }}>\r\n        <Slider\r\n          classes={{\r\n            rail: classes.rail,\r\n            track: classes.track,\r\n            markLabel: classes.markLabel,\r\n            markLabelActive: classes.markLabelActive\r\n          }}\r\n          aria-labelledby=\"vertical-slider\"\r\n          min={-6}\r\n          max={props.includeAll ? 1 : 0}\r\n          step={null}\r\n          marks={props.includeAll ? alldays : days }\r\n          onChange={(e, v) => setDow(v * -1)}\r\n          value={dow * -1}\r\n          orientation=\"vertical\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DaySlider\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Time\\index.jsx",["211"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { PlayCircleOutline } from '@material-ui/icons'\r\nimport Slider from '../Slider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { allmarks, marks } from '../../../constants'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 150,\r\n    marginTop: theme.spacing(4),\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n  },\r\n  button: {\r\n    color: '#69dcff',\r\n    marginRight: '5%'\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  rail: {\r\n    opacity: 0.38\r\n  },\r\n  track: {\r\n    opacity: 0.38\r\n  },\r\n  markLabel: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  markLabelActive: {\r\n    color: theme.palette.text.primary\r\n  }\r\n}))\r\n\r\nconst getHour = hour => {\r\n  let hours = [-2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]\r\n  return hours.filter(el => hour >= el && hour < el + 2)[0]\r\n}\r\n\r\nfunction TimeSlider(props) {\r\n  const [hour, setHour] = useState(getHour(props.value))\r\n  let current = hour\r\n  useEffect(\r\n    () => {\r\n      props.changeTime(getHour(current))\r\n    },\r\n    [current]\r\n  )\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"time-of-day-slider\" gutterBottom className={classes.header}>\r\n        Time of Day\r\n        {props.playTime ? (\r\n          <IconButton\r\n            className={classes.button}\r\n            aria-label=\"Play\"\r\n            disabled={current > 20}\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              if (current < 22) {\r\n                let int = setInterval(() => {\r\n                  if (current > 18) clearInterval(int)\r\n                  current = current + 2\r\n                  setHour(getHour(current))\r\n                }, 2000)\r\n              }\r\n            }}\r\n          >\r\n            <PlayCircleOutline />\r\n          </IconButton>\r\n        ) : null}\r\n      </Typography>\r\n      <div style={{ height: '100%' }}>\r\n        <Slider\r\n          classes={{\r\n            rail: classes.rail,\r\n            track: classes.track,\r\n            markLabel: classes.markLabel,\r\n            markLabelActive: classes.markLabelActive\r\n          }}\r\n          aria-labelledby=\"vertical-slider\"\r\n          min={-22}\r\n          max={props.includeAll ? 2 : 0}\r\n          step={null}\r\n          marks={props.includeAll ? allmarks : marks }\r\n          onChange={(e, v) => setHour(getHour(v * -1))}\r\n          value={current * -1}\r\n          orientation=\"vertical\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default TimeSlider\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\colorManipulator.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\focusVisible.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\ownerWindow.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\reactHelpers.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\ValueLabel.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\useEventCallback.js",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Slider\\ownerDocument.js",[],["212","213"],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\constants\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\constants\\CrimeCategoryCodes.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\constants\\timeMarks.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\store\\view.js",["214","215"],"/* eslint-disable complexity */\r\nimport axios from 'axios';\r\n\r\n/**\r\n * ACTION TYPES\r\n */\r\nconst INITIAL_LOAD = 'INITIAL_LOAD';\r\nconst TOOGLE_3D = 'TOOGLE_3D';\r\nconst CHANGE_BORO = 'CHANGE_BORO';\r\nconst CHANGE_PERIOD = 'CHANGE_PERIOD';\r\nconst CHANGE_DAY = 'CHANGE_DAY';\r\nconst CHANGE_TIME = 'CHANGE_TIME';\r\nconst CLASS_FILTER_CHANGE = 'CLASS_FILTER_CHANGE';\r\nconst CATEGORY_FILTER_CHANGE = 'CATEGORY_FILTER_CHANGE';\r\n\r\nconst LOCATION_PREDICT_CHANGE = 'LOCATION_PREDICT_CHANGE';\r\nconst BORO_PREDICT_CHANGE = 'BORO_PREDICT_CHANGE';\r\nconst SEX_PREDICT_CHANGE = 'SEX_PREDICT_CHANGE';\r\nconst RACE_PREDICT_CHANGE = 'RACE_PREDICT_CHANGE';\r\nconst YEAR_PREDICT_CHANGE = 'YEAR_PREDICT_CHANGE';\r\nconst MONTH_PREDICT_CHANGE = 'MONTH_PREDICT_CHANGE';\r\nconst DAY_PREDICT_CHANGE = 'DAY_PREDICT_CHANGE';\r\nconst HOUR_PREDICT_CHANGE = 'HOUR_PREDICT_CHANGE';\r\n// const GET_CRIMES = 'GET_CRIMES'\r\n\r\n/**\r\n * INITIAL STATE\r\n */\r\n\r\nlet initialLoad = true;\r\nlet startBoro = 'MANHATTAN';\r\nlet startDate = new Date(2019, 0, 1);\r\nlet endDate = new Date(2019, 11, 31);\r\nlet currentTime = new Date();\r\nlet classFilter = {\r\n    felony: true,\r\n    misd: true,\r\n    viol: true,\r\n};\r\nlet categoryFilter = {\r\n    HOMICIDE: true,\r\n    SEXCRIME: true,\r\n    THEFTFRAUD: true,\r\n    OTHERVIOLENT: true,\r\n    DRUGS: true,\r\n    OTHER: true,\r\n};\r\n// let crimeData = {}\r\nlet latitude = '';\r\nlet longitude = '';\r\nlet boroPredict = '';\r\nlet sexPredict = '';\r\nlet racePredict = '';\r\nlet yearPredict = currentTime.getFullYear();\r\nlet monthPredict = currentTime.getMonth();\r\nlet dayPredict = currentTime.getDay();\r\nlet hourPredict = currentTime.getHours();\r\n\r\nconst defaultView = {\r\n    initialLoad,\r\n    threeD: false,\r\n    boro: startBoro,\r\n    startDate,\r\n    endDate,\r\n    day: -1,\r\n    hour: -2,\r\n    classFilter,\r\n    categoryFilter,\r\n    // crimeData\r\n    latitude,\r\n    longitude,\r\n    boroPredict,\r\n    sexPredict,\r\n    racePredict,\r\n    yearPredict,\r\n    monthPredict,\r\n    dayPredict,\r\n    hourPredict,\r\n};\r\n\r\n/**\r\n * ACTION CREATORS\r\n */\r\nexport const initialLoadCheck = () => ({ type: INITIAL_LOAD });\r\nexport const toggle3dAction = (threeD) => ({ type: TOOGLE_3D, threeD });\r\nexport const boroChange = (boro) => ({ type: CHANGE_BORO, boro });\r\nexport const periodChange = (startDate, endDate) => ({ type: CHANGE_PERIOD, startDate, endDate });\r\n\r\nexport const dayChange = (day) => ({ type: CHANGE_DAY, day });\r\nexport const timeChange = (time) => ({ type: CHANGE_TIME, time });\r\nexport const classFilterChange = (filterValue, checked) => ({\r\n    type: CLASS_FILTER_CHANGE,\r\n    filterValue,\r\n    checked,\r\n});\r\nexport const categoryFilterChange = (filterValue, checked) => ({\r\n    type: CATEGORY_FILTER_CHANGE,\r\n    filterValue,\r\n    checked,\r\n});\r\nexport const locationPredictChange = (longitude, latitude) => ({ type: LOCATION_PREDICT_CHANGE, longitude, latitude });\r\nexport const boroPredictChange = (boro) => ({ type: BORO_PREDICT_CHANGE, boro });\r\nexport const sexPredictChange = (sex) => ({ type: SEX_PREDICT_CHANGE, sex });\r\nexport const racePredictChange = (race) => ({ type: RACE_PREDICT_CHANGE, race });\r\nexport const yearPredictChange = (year) => ({ type: YEAR_PREDICT_CHANGE, year });\r\nexport const monthPredictChange = (month) => ({ type: MONTH_PREDICT_CHANGE, month });\r\nexport const dayPredictChange = (day) => ({ type: DAY_PREDICT_CHANGE, day });\r\nexport const hourPredictChange = (hour) => ({ type: HOUR_PREDICT_CHANGE, hour });\r\n// export const getCrimes = crimes => ({type: GET_CRIMES, crimes})\r\n\r\n/**\r\n * THUNK CREATORS\r\n */\r\n\r\nexport const toggle3d = (threeD) => {\r\n    return (dispatch) => {\r\n        dispatch(toggle3dAction(threeD));\r\n    };\r\n};\r\n\r\nexport const changePeriod = (startDate, endDate) => {\r\n    return (dispatch) => {\r\n        dispatch(periodChange(startDate, endDate));\r\n    };\r\n};\r\n\r\nexport const changeDay = (day) => {\r\n    return (dispatch) => {\r\n        dispatch(dayChange(day));\r\n    };\r\n};\r\n\r\nexport const changeTime = (time) => {\r\n    return (dispatch) => {\r\n        dispatch(timeChange(time));\r\n    };\r\n};\r\n\r\nexport const changeLoadStatus = () => {\r\n    return (dispatch) => {\r\n        dispatch(initialLoadCheck());\r\n    };\r\n};\r\n\r\nexport const changeClassFilter = (filterValue, checked) => {\r\n    return (dispatch) => {\r\n        dispatch(classFilterChange(filterValue, checked));\r\n    };\r\n};\r\n\r\nexport const changeCategoryFilter = (filterValue, checked) => {\r\n    return (dispatch) => {\r\n        dispatch(categoryFilterChange(filterValue, checked));\r\n    };\r\n};\r\n\r\nexport const changeBoro = (boro) => {\r\n    return (dispatch) => {\r\n        dispatch(boroChange(boro));\r\n    };\r\n};\r\n\r\nexport const changeLocationPredict = (longitude, latitude) => {\r\n    return (dispatch) => {\r\n        dispatch(locationPredictChange(longitude, latitude));\r\n    };\r\n};\r\n\r\nexport const changeBoroPredict = (boro) => {\r\n    return (dispatch) => {\r\n        dispatch(boroPredictChange(boro));\r\n    };\r\n};\r\n\r\nexport const changeSexPredict = (sex) => {\r\n    return (dispatch) => {\r\n        dispatch(sexPredictChange(sex));\r\n    };\r\n};\r\n\r\nexport const changeRacePredict = (race) => {\r\n    return (dispatch) => {\r\n        dispatch(racePredictChange(race));\r\n    };\r\n};\r\n\r\nexport const changeYearPredict = (year) => {\r\n    return (dispatch) => {\r\n        dispatch(yearPredictChange(year));\r\n    };\r\n};\r\n\r\nexport const changeMonthPredict = (month) => {\r\n    return (dispatch) => {\r\n        dispatch(monthPredictChange(month));\r\n    };\r\n};\r\n\r\nexport const changeDayPredict = (day) => {\r\n    return (dispatch) => {\r\n        dispatch(dayPredictChange(day));\r\n    };\r\n};\r\n\r\nexport const changeHourPredict = (hour) => {\r\n    return (dispatch) => {\r\n        dispatch(hourPredictChange(hour));\r\n    };\r\n};\r\n\r\n// export const getCrimesThunk = () => async dispatch => {\r\n//   try {\r\n//     const crimeRes = await axios.get(`/api/crimes`)\r\n//     dispatch(getCrimes(crimeRes.data))\r\n//   } catch (err) {\r\n//     console.error(err)\r\n//   }\r\n// }\r\n/**\r\n * REDUCER\r\n */\r\n\r\nexport default function (state = defaultView, action) {\r\n    let newState = JSON.parse(JSON.stringify(state));\r\n    switch (action.type) {\r\n        case INITIAL_LOAD:\r\n            newState.initialLoad = false;\r\n            return newState;\r\n        case TOOGLE_3D:\r\n            newState.threeD = action.threeD;\r\n            newState.initialLoad = true;\r\n            return newState;\r\n        case CHANGE_BORO:\r\n            newState.boro = action.boro;\r\n            return newState;\r\n        case CHANGE_PERIOD:\r\n            newState.startDate = action.startDate;\r\n            newState.endDate = action.endDate;\r\n            return newState;\r\n        case CHANGE_DAY:\r\n            newState.day = action.day;\r\n            return newState;\r\n        case CHANGE_TIME:\r\n            newState.hour = action.time;\r\n            return newState;\r\n        case CLASS_FILTER_CHANGE:\r\n            newState.classFilter[action.filterValue] = action.checked;\r\n            return newState;\r\n        case CATEGORY_FILTER_CHANGE:\r\n            newState.categoryFilter[action.filterValue] = action.checked;\r\n            return newState;\r\n\r\n        // case GET_CRIMES:\r\n        // \tnewState.crimes = action.crimes;\r\n        // \treturn newState;\r\n        case LOCATION_PREDICT_CHANGE:\r\n            newState.longitude = action.longitude;\r\n            newState.latitude = action.latitude;\r\n            return newState;\r\n        case BORO_PREDICT_CHANGE:\r\n            newState.boroPredict = action.boro;\r\n            return newState;\r\n        case SEX_PREDICT_CHANGE:\r\n            newState.sexPredict = action.sex;\r\n            return newState;\r\n        case RACE_PREDICT_CHANGE:\r\n            newState.racePredict = action.race;\r\n            return newState;\r\n        case YEAR_PREDICT_CHANGE:\r\n            newState.yearPredict = action.year;\r\n            return newState;\r\n        case MONTH_PREDICT_CHANGE:\r\n            newState.monthPredict = action.month;\r\n            return newState;\r\n        case DAY_PREDICT_CHANGE:\r\n            newState.dayPredict = action.day;\r\n            return newState;\r\n        case HOUR_PREDICT_CHANGE:\r\n            newState.hourPredict = action.hour;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\FilterDrawer.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Interface\\PredictDrawer.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\index.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Sliders\\Month\\index.jsx",["216"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Slider from '../Slider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { months } from '../../../constants'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 220,\r\n    marginTop: theme.spacing(4),\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    color: 'rgba(255, 255, 255, 0.7)'\r\n  },\r\n  button: {\r\n    color: '#69dcff',\r\n    marginRight: '5%'\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  rail: {\r\n    opacity: 0.38\r\n  },\r\n  track: {\r\n    opacity: 0.38\r\n  },\r\n  markLabel: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  markLabelActive: {\r\n    color: theme.palette.text.primary\r\n  }\r\n}))\r\n\r\nfunction MonthSlider(props) {\r\n  const [month, setMonth] = useState(props.value)\r\n  useEffect(\r\n    () => {\r\n      props.changeMonth(month)\r\n    },\r\n    [month]\r\n  )\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography\r\n        id=\"discrete-slider-restrict\"\r\n        gutterBottom\r\n        className={classes.header}\r\n      >\r\n        Month of Week\r\n      </Typography>\r\n      <div style={{ height: '100%' }}>\r\n        <Slider\r\n          classes={{\r\n            rail: classes.rail,\r\n            track: classes.track,\r\n            markLabel: classes.markLabel,\r\n            markLabelActive: classes.markLabelActive\r\n          }}\r\n          aria-labelledby=\"vertical-slider\"\r\n          min={-11}\r\n          max={0}\r\n          step={null}\r\n          marks={months}\r\n          onChange={(e, v) => setMonth(v * -1)}\r\n          value={month * -1}\r\n          orientation=\"vertical\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MonthSlider\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Sex.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Race.jsx",[],"D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Location.jsx",["217","218"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadModules } from 'esri-loader'\r\nimport { changeLoadStatus, changeLocationPredict, changeBoroPredict } from '../../store'\r\nimport {\r\n  FormControl,\r\n  Button\r\n} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  label: {\r\n    height: 30\r\n  },\r\n  header: {\r\n    marginBottom: 5\r\n  }\r\n}))\r\n\r\nconst LocationPredict = props => {\r\n\r\n  const classes = useStyles()\r\n  const selectedCategories = props.mapView.categoryPredict\r\n\r\n  const getLocation = () => { \r\n    props.view.when(async function () {\r\n      props.view.ui.find(\"myLocation\").locate().then(async function (evt) {\r\n        const lat = parseFloat(evt.coords.latitude)\r\n        const lon = parseFloat(evt.coords.longitude)\r\n        props.changeLocationPredict(lon, lat)\r\n        axios\r\n          .get(\r\n            `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}&localityLanguage=en`\r\n          )\r\n          .then(res => {\r\n              if (res.data.countryCode === \"US\") {\r\n                props.changeBoroPredict(res.data.localityInfo.administrative[3].name.toUpperCase())\r\n              } else {\r\n                props.changeBoroPredict(\"MANHATTAN\")\r\n              }\r\n          })\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        {props.mapView.longitude === \"\" && props.mapView.latitude === \"\" ? (\r\n          <Button\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            onClick={getLocation}\r\n            startIcon={<Icon className=\"fas fa-map-pin\" />}\r\n          >\r\n            Locate Me\r\n          </Button>\r\n\r\n        ) : (\r\n            <Button disabled>{props.mapView.longitude}, {props.mapView.latitude}</Button>\r\n        )}\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  let mapView = state.view\r\n  return { mapView }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    initialLoad: () => dispatch(changeLoadStatus()),\r\n    changeLocationPredict: (longitude, latitude) =>\r\n      dispatch(changeLocationPredict(longitude, latitude)),\r\n    changeBoroPredict: (boro) =>\r\n      dispatch(changeBoroPredict(boro))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationPredict)\r\n","D:\\Projets\\ter_location_analytics\\ny-crimes\\app\\src\\components\\Predict\\Year.jsx",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":44,"column":6,"nodeType":"229","endLine":44,"endColumn":8,"suggestions":"230"},{"ruleId":"223","severity":1,"message":"224","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":15},{"ruleId":"227","severity":1,"message":"231","line":19,"column":6,"nodeType":"229","endLine":19,"endColumn":8,"suggestions":"232"},{"ruleId":"223","severity":1,"message":"233","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"227","severity":1,"message":"231","line":64,"column":6,"nodeType":"229","endLine":64,"endColumn":8,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":46,"column":44,"nodeType":"237","messageId":"238","endLine":46,"endColumn":46},{"ruleId":"235","severity":1,"message":"236","line":81,"column":44,"nodeType":"237","messageId":"238","endLine":81,"endColumn":46},{"ruleId":"227","severity":1,"message":"239","line":160,"column":6,"nodeType":"229","endLine":160,"endColumn":8,"suggestions":"240"},{"ruleId":"223","severity":1,"message":"224","line":5,"column":10,"nodeType":"225","messageId":"226","endLine":5,"endColumn":15},{"ruleId":"227","severity":1,"message":"231","line":108,"column":6,"nodeType":"229","endLine":108,"endColumn":8,"suggestions":"241"},{"ruleId":"223","severity":1,"message":"224","line":8,"column":10,"nodeType":"225","messageId":"226","endLine":8,"endColumn":15},{"ruleId":"223","severity":1,"message":"242","line":8,"column":17,"nodeType":"225","messageId":"226","endLine":8,"endColumn":25},{"ruleId":"227","severity":1,"message":"243","line":217,"column":5,"nodeType":"229","endLine":223,"endColumn":6,"suggestions":"244"},{"ruleId":"223","severity":1,"message":"233","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"227","severity":1,"message":"239","line":88,"column":6,"nodeType":"229","endLine":88,"endColumn":8,"suggestions":"245"},{"ruleId":"227","severity":1,"message":"239","line":43,"column":5,"nodeType":"229","endLine":43,"endColumn":10,"suggestions":"246"},{"ruleId":"227","severity":1,"message":"239","line":51,"column":5,"nodeType":"229","endLine":51,"endColumn":14,"suggestions":"247"},{"ruleId":"219","replacedBy":"248"},{"ruleId":"221","replacedBy":"249"},{"ruleId":"223","severity":1,"message":"250","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"252","line":223,"column":1,"nodeType":"253","endLine":284,"endColumn":2},{"ruleId":"227","severity":1,"message":"239","line":43,"column":5,"nodeType":"229","endLine":43,"endColumn":12,"suggestions":"254"},{"ruleId":"223","severity":1,"message":"255","line":3,"column":10,"nodeType":"225","messageId":"226","endLine":3,"endColumn":21},{"ruleId":"223","severity":1,"message":"256","line":30,"column":9,"nodeType":"225","messageId":"226","endLine":30,"endColumn":27},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'layer' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.map' and 'renderer'. Either include them or remove the dependency array.","ArrayExpression",["259"],"React Hook useEffect has a missing dependency: 'props.map'. Either include it or remove the dependency array.",["260"],"'useState' is defined but never used.",["261"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["262"],["263"],"'setLayer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'heatMapRenderer', 'props.currentHour', 'props.map', 'props.mapView.endDate', 'props.mapView.startDate', and 'props.view'. Either include them or remove the dependency array.",["264"],["265"],["266"],["267"],["257"],["258"],"'axios' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["268"],"'loadModules' is defined but never used.","'selectedCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"271","fix":"273"},{"desc":"274","fix":"275"},{"desc":"271","fix":"276"},{"desc":"277","fix":"278"},{"desc":"274","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [props.map, renderer]",{"range":"286","text":"287"},"Update the dependencies array to be: [props.map]",{"range":"288","text":"289"},{"range":"290","text":"289"},"Update the dependencies array to be: [props]",{"range":"291","text":"292"},{"range":"293","text":"289"},"Update the dependencies array to be: [props.mapView.day, props.mapView.currentHour, props.mapView.classFilter, props.mapView.categoryFilter, props.mapView.boro, props.mapView.startDate, props.mapView.endDate, props.currentHour, props.map, props.view, heatMapRenderer]",{"range":"294","text":"295"},{"range":"296","text":"292"},"Update the dependencies array to be: [dow, props]",{"range":"297","text":"298"},"Update the dependencies array to be: [current, props]",{"range":"299","text":"300"},"Update the dependencies array to be: [month, props]",{"range":"301","text":"302"},[1267,1269],"[props.map, renderer]",[596,598],"[props.map]",[1825,1827],[5927,5929],"[props]",[3283,3285],[8696,8861],"[props.mapView.day, props.mapView.currentHour, props.mapView.classFilter, props.mapView.categoryFilter, props.mapView.boro, props.mapView.startDate, props.mapView.endDate, props.currentHour, props.map, props.view, heatMapRenderer]",[3120,3122],[978,983],"[dow, props]",[1296,1305],"[current, props]",[981,988],"[month, props]"]